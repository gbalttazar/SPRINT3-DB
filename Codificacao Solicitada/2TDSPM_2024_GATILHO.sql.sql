-- Remover a tabela de auditoria se já existir
DROP TABLE t_auditoria_empresa CASCADE CONSTRAINTS;
DROP SEQUENCE seq_auditoria_empresa;

CREATE SEQUENCE seq_auditoria_empresa;
-- Criar tabela de auditoria
CREATE TABLE t_auditoria_empresa (
    id_auditoria NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Gera ID automaticamente
    id_empresa_old NUMBER(9),
    cnpj_old NUMBER(14),
    ds_email_old VARCHAR2(100),
    nm_empresa_old VARCHAR2(90),
    st_empresa_old CHAR(1),
    id_cliente_old NUMBER(9),
    id_empresa_new NUMBER(9),
    cnpj_new NUMBER(14),
    ds_email_new VARCHAR2(100),
    nm_empresa_new VARCHAR2(90),
    st_empresa_new CHAR(1),
    id_cliente_new NUMBER(9),
    usuario VARCHAR2(255),
    tipo_operacao VARCHAR2(10),
    data_operacao TIMESTAMP DEFAULT SYSTIMESTAMP,  -- Data e hora da operação
    CONSTRAINT pk_auditoria_empresa PRIMARY KEY (id_auditoria)
);

-- Criar trigger para auditoria
CREATE OR REPLACE TRIGGER trg_auditoria_empresa
AFTER INSERT OR UPDATE OR DELETE ON t_empresa
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        -- Auditoria para inserção
        INSERT INTO t_auditoria_empresa (
            id_empresa_new, cnpj_new, ds_email_new, nm_empresa_new, st_empresa_new, id_cliente_new, usuario, tipo_operacao, data_operacao
        ) VALUES (
            :NEW.id_empresa, :NEW.cnpj, :NEW.ds_email, :NEW.nm_empresa, :NEW.st_empresa, :NEW.id_cliente, USER, 'INSERT', SYSTIMESTAMP
        );
    ELSIF UPDATING THEN
        -- Auditoria para atualização
        INSERT INTO t_auditoria_empresa (
            id_empresa_old, cnpj_old, ds_email_old, nm_empresa_old, st_empresa_old, id_cliente_old,
            id_empresa_new, cnpj_new, ds_email_new, nm_empresa_new, st_empresa_new, id_cliente_new,
            usuario, tipo_operacao, data_operacao
        ) VALUES (
            :OLD.id_empresa, :OLD.cnpj, :OLD.ds_email, :OLD.nm_empresa, :OLD.st_empresa, :OLD.id_cliente,
            :NEW.id_empresa, :NEW.cnpj, :NEW.ds_email, :NEW.nm_empresa, :NEW.st_empresa, :NEW.id_cliente,
            USER, 'UPDATE', SYSTIMESTAMP
        );
    ELSIF DELETING THEN
        -- Auditoria para exclusão
        INSERT INTO t_auditoria_empresa (
            id_empresa_old, cnpj_old, ds_email_old, nm_empresa_old, st_empresa_old, id_cliente_old, usuario, tipo_operacao, data_operacao
        ) VALUES (
            :OLD.id_empresa, :OLD.cnpj, :OLD.ds_email, :OLD.nm_empresa, :OLD.st_empresa, :OLD.id_cliente, USER, 'DELETE', SYSTIMESTAMP
        );
    END IF;
END;
/

-- Inserir um registro na tabela t_cliente (necessário para relacionar com t_empresa)
INSERT INTO t_cliente (id_cliente, nm_cliente) 
VALUES (106, 'Lucas Almeida');

-- Inserir um registro na tabela t_empresa
INSERT INTO t_empresa (id_empresa, cnpj, ds_email, nm_empresa, st_empresa, id_cliente)
VALUES (60, 98765432101234, 'info@anotherco.com', 'AnotherCo', 'A', 106);

-- Atualização de um registro na tabela t_empresa
UPDATE t_empresa
SET nm_empresa = 'Mega Enterprise Updated', ds_email = 'update@megaenterprise.com'
WHERE id_empresa = 60;

-- Exclusão de um registro na tabela t_empresa
DELETE FROM t_empresa
WHERE id_empresa = 60;

-- Consulta dos registros de auditoria
SELECT * FROM t_auditoria_empresa;
